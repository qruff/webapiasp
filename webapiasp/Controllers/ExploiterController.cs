using Microsoft.AspNetCore.Http;
using Microsoft.AspNetCore.Mvc;
using webapiasp.Models;
using webapiasp.DTO;
namespace webapiasp.Controllers
{
    [ApiController]
    [Route("api/exploiter")]
    public class ExploiterController : ControllerBase
    {
        private readonly TravelContext _context;
        public ExploiterController(TravelContext context)
        {
            _context = context;
        }

        /// <summary>
        /// Регистрация
        /// </summary>
        /// <param name="addExploiterRequest"></param>
        /// <returns></returns>
        [HttpPost("register")]
        public IActionResult RegisterExploiter([FromBody] AddExploiterRequest addExploiterRequest)
        {
            Console.WriteLine("register exploiter");
            Console.WriteLine(addExploiterRequest);
            Exploiter exploiter = new Exploiter
            {
                Firstname = addExploiterRequest.FirstName,
                Lastname = addExploiterRequest.LastName,
                Email = addExploiterRequest.Email,
                Password = addExploiterRequest.Password,
                Phone = addExploiterRequest.Phone,
                Role = "Client"
            };
            _context.Exploiters.Add(exploiter);
            _context.SaveChanges();
            Console.WriteLine("response sent");
            return Ok(exploiter);
        }

        /// <summary>
        /// Добавление гида
        /// </summary>
        /// <param name="addExploiterRequest"></param>
        /// <returns></returns>
        [HttpPost("guideregister")]
        public IActionResult RegisterGuide([FromBody] AddExploiterRequest addExploiterRequest)
        {
            Console.WriteLine("register exploiter");
            Console.WriteLine(addExploiterRequest);
            Exploiter exploiter = new Exploiter
            {
                Firstname = addExploiterRequest.FirstName,
                Lastname = addExploiterRequest.LastName,
                Email = addExploiterRequest.Email,
                Password = addExploiterRequest.Password,
                Phone = addExploiterRequest.Phone,
                Role = "Guide"
            };
            _context.Exploiters.Add(exploiter);
            _context.SaveChanges();
            Console.WriteLine("response sent");
            return Ok(exploiter);
        }
        /// <summary>
        /// Вход 
        /// </summary>
        /// <param name="exploiterLoginRequest"></param>
        /// <returns></returns>
        [HttpPost("login")]
        public IActionResult LoginExploiter([FromBody] ExploiterLoginRequest exploiterLoginRequest)
        {
            Console.WriteLine("LOGIN EXPLOITER");
            Console.WriteLine(exploiterLoginRequest);
            Exploiter exploiter = _context.Exploiters.FirstOrDefault(e => e.Email==exploiterLoginRequest.Email && e.Password==exploiterLoginRequest.Password);
            Console.WriteLine("response sent");
            return Ok(exploiter);
        }

        /// <summary>
        /// Получение всех гидов
        /// </summary>
        /// <returns></returns>
        [HttpGet("guideperson/all")]
        public IActionResult GetAllGuidePersons()
        {
            Console.WriteLine("get all guide persons");
            List<Exploiter> guidePersons = _context.Exploiters.Where(e => e.Role == "Guide").ToList();
            Console.WriteLine("response sent");
            return Ok(guidePersons);
        }
    }
}
